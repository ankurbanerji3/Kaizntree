{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\Desktop\\\\stuff\\\\MS stuff\\\\shreyas\\\\application materials\\\\CV\\\\Internship Applications\\\\OAs\\\\Fulltime\\\\Kaizntree\\\\src\\\\components\\\\InputSelect\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"KaizntreeSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"KaizntreeInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"KaizntreeText--s KaizntreeText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"KaizntreeBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"KaizntreeInputSelect--input\",\n          onClick: event => {\n            //dowpdown click\n            setDropdownPosition(getDropdownPosition(event.target));\n            toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"KaizntreeInputSelect--dropdown-container\", {\n            \"KaizntreeInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"KaizntreeInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"KaizntreeInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }, this);\n        }\n\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"KaizntreeInputSelect--dropdown-item\", {\n                \"KaizntreeInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"KaizntreeInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"P/yBOClT+tikRlX+sSLK7WIsfTo=\");\n\n_c = InputSelect;\n\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","selectedItem","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","event","getDropdownPosition","target","onClick","renderItems","length","map","index","parsedItem","key","value","className","Element","getBoundingClientRect","scrollY","window"],"sources":["C:/Users/shrey/Desktop/stuff/MS stuff/shreyas/application materials/CV/Internship Applications/OAs/Fulltime/Kaizntree/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\";\n\nexport function InputSelect<TItem>({ label, defaultValue, onChange: consumerOnChange, items, parseItem, isLoading, loadingLabel }: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null);\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  });\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return;\n      }\n\n      consumerOnChange(selectedItem);\n      setSelectedValue(selectedItem);\n    },\n    [consumerOnChange]\n  );\n\n  return (\n    <Downshift<TItem> id=\"KaizntreeSelect\" onChange={onChange} selectedItem={selectedValue} itemToString={(item) => (item ? parseItem(item).label : \"\")}>\n      {({ getItemProps, getLabelProps, getMenuProps, isOpen, highlightedIndex, selectedItem, getToggleButtonProps, inputValue }) => {\n        const toggleProps = getToggleButtonProps();\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n\n        return (\n          <div className=\"KaizntreeInputSelect--root\">\n            <label className=\"KaizntreeText--s KaizntreeText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"KaizntreeBreak--xs\" />\n            <div\n              className=\"KaizntreeInputSelect--input\"\n              onClick={(event) => {\n                //dowpdown click\n                setDropdownPosition(getDropdownPosition(event.target));\n                toggleProps.onClick(event);\n              }}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\"KaizntreeInputSelect--dropdown-container\", {\n                \"KaizntreeInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        );\n\n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n\n          if (isLoading) {\n            return <div className=\"KaizntreeInputSelect--dropdown-item\">{loadingLabel}...</div>;\n          }\n\n          if (items.length === 0) {\n            return <div className=\"KaizntreeInputSelect--dropdown-item\">No items</div>;\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"KaizntreeInputSelect--dropdown-item\", {\n                    \"KaizntreeInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"KaizntreeInputSelect--dropdown-item-selected\": parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            );\n          });\n        }\n      }}\n    </Downshift>\n  );\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect();\n    const { scrollY } = window;\n    return {\n      top: scrollY + top + 63,\n      left,\n    };\n  }\n\n  return { top: 0, left: 0 };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}